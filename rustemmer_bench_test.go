package rustemmer

import (
	"testing"
)

func BenchmarkNormalizeText(b *testing.B) {
	testText := "Планшет IRU Pad Master B703, 4Гб, Wi-Fi, Android 4.1 [v13pro]"
	testResultText := "Планшет IRU Pad Master B703 4Гб Wi Fi Android 4 1 v13pro"

	for i := 0; i < b.N; i++ {
		normalizedText := NormalizeText(testText)
		if normalizedText != testResultText {
			b.Errorf("Not equal: %s != %s", testResultText, normalizedText)
		}
	}
}

func BenchmarkGetWordBase(b *testing.B) {
	testWords := map[string]string{
		"результаты"   : "результат",
		"в"            : "в",
		"вавиловка"    : "вавиловк",
		"вагнера"      : "вагнер",
		"вагон"        : "вагон",
		"вагона"       : "вагон",
		"вагоне"       : "вагон",
		"вагонов"      : "вагон",
		"вагоном"      : "вагон",
		"вагоны"       : "вагон",
		"важная"       : "важн",
		"важнее"       : "важн",
		"важнейшие"    : "важн",
		"важнейшими"   : "важн",
		"важничал"     : "важнича",
		"важно"        : "важн",
		"важного"      : "важн",
		"важное"       : "важн",
		"важной"       : "важн",
		"важном"       : "важн",
		"важному"      : "важн",
		"важности"     : "важност",
		"важностию"    : "важност",
		"важность"     : "важност",
		"важностью"    : "важност",
		"важную"       : "важн",
		"важны"        : "важн",
		"важные"       : "важн",
		"важный"       : "важн",
		"важным"       : "важн",
		"важных"       : "важн",
		"вазах"        : "ваз",
		"вазы"         : "ваз",
		"вакса"        : "вакс",
		"вакханка"     : "вакханк",
		"вал"          : "вал",
		"валандался"   : "валанда",
		"валентина"    : "валентин",
		"валериановых" : "валерианов",
		"валерию"      : "валер",
		"валетами"     : "валет",
		"вали"         : "вал",
		"валил"        : "вал",
		"валился"      : "вал",
		"валится"      : "вал",
		"валов"        : "вал",
		"вальдшнепа"   : "вальдшнеп",
		"вальс"        : "вальс",
		"вальса"       : "вальс",
		"вальсе"       : "вальс",
		"вальсишку"    : "вальсишк",
		"вальтера"     : "вальтер",
		"валяется"     : "валя",
		"валялась"     : "валя",
		"валялись"     : "валя",
		"валялось"     : "валя",
		"валялся"      : "валя",
		"валять"       : "валя",
		"валяются"     : "валя",
		"вам"          : "вам",
		"вами"         : "вам",
	}

	for i := 0; i < b.N; i++ {
		for word, base := range testWords {
			testBase := GetWordBase(word)
			if base != testBase {
				b.Errorf("Not equal: [%s] %s != %s", word, base, testBase)
			}
		}
	}
}